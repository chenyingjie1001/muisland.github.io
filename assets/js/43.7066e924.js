(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{388:function(t,e,n){"use strict";n.r(e);var r=n(45),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[t._v("#")]),t._v(" Diff")]),t._v(" "),n("p",[t._v("传统diff算法复杂度O(n^3), react diff从tree diff component diff element diff做优化，将复杂度降到了O(n)")]),t._v(" "),n("ul",[n("li",[t._v("对树进行了分层比较，两棵树只会对同一层次的节点比较，忽略跨层级的改动")]),t._v(" "),n("li",[t._v("只对同类型的组件进行比较，否则直接删除创建新的节点")]),t._v(" "),n("li",[t._v("对于同级的节点，用key作为唯一标识，判断新老集合是否存在相同的节点，如果有移动即可。\n移动前当前节点在老集合中的位置与lastIndex作比较，小于则移动，否则只修改下标，lastIndex标识在老集合中访问过最大位置。")])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/103187276",target:"_blank",rel:"noopener noreferrer"}},[t._v("React探索-diff算法"),n("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);